rule_antecedent* antecedent;
condition* cond1;
condition* cond2;
condition* cond3;
rule_consequent* consequent;
fuzzy_rule* rule;

antecedent = create_rule_antecedent();
cond1 = create_condition(temp_err, low_temp, AND);
cond2 = create_condition(humidity, low_hum, AND);
cond3 = create_condition(rate_of_heating, low_roh, NONE);
add_condition_to_antecedent(antecedent, cond1);
add_condition_to_antecedent(antecedent, cond2);
add_condition_to_antecedent(antecedent, cond3);
consequent = create_rule_consequent(heat_status, heat_off);
rule = create_rule(engine, antecedent, consequent);
add_rule(engine, rule);

antecedent = create_rule_antecedent();
cond1 = create_condition(temp_err, low_temp, AND);
cond2 = create_condition(humidity, low_hum, AND);
cond3 = create_condition(rate_of_heating, moderate_roh, NONE);
add_condition_to_antecedent(antecedent, cond1);
add_condition_to_antecedent(antecedent, cond2);
add_condition_to_antecedent(antecedent, cond3);
consequent = create_rule_consequent(heat_status, heat_off);
rule = create_rule(engine, antecedent, consequent);
add_rule(engine, rule);

antecedent = create_rule_antecedent();
cond1 = create_condition(temp_err, low_temp, AND);
cond2 = create_condition(humidity, low_hum, AND);
cond3 = create_condition(rate_of_heating, high_roh, NONE);
add_condition_to_antecedent(antecedent, cond1);
add_condition_to_antecedent(antecedent, cond2);
add_condition_to_antecedent(antecedent, cond3);
consequent = create_rule_consequent(heat_status, heat_off);
rule = create_rule(engine, antecedent, consequent);
add_rule(engine, rule);

antecedent = create_rule_antecedent();
cond1 = create_condition(temp_err, low_temp, AND);
cond2 = create_condition(humidity, moderate_hum, AND);
cond3 = create_condition(rate_of_heating, low_roh, NONE);
add_condition_to_antecedent(antecedent, cond1);
add_condition_to_antecedent(antecedent, cond2);
add_condition_to_antecedent(antecedent, cond3);
consequent = create_rule_consequent(heat_status, heat_off);
rule = create_rule(engine, antecedent, consequent);
add_rule(engine, rule);

antecedent = create_rule_antecedent();
cond1 = create_condition(temp_err, low_temp, AND);
cond2 = create_condition(humidity, moderate_hum, AND);
cond3 = create_condition(rate_of_heating, moderate_roh, NONE);
add_condition_to_antecedent(antecedent, cond1);
add_condition_to_antecedent(antecedent, cond2);
add_condition_to_antecedent(antecedent, cond3);
consequent = create_rule_consequent(heat_status, heat_off);
rule = create_rule(engine, antecedent, consequent);
add_rule(engine, rule);

antecedent = create_rule_antecedent();
cond1 = create_condition(temp_err, low_temp, AND);
cond2 = create_condition(humidity, moderate_hum, AND);
cond3 = create_condition(rate_of_heating, high_roh, NONE);
add_condition_to_antecedent(antecedent, cond1);
add_condition_to_antecedent(antecedent, cond2);
add_condition_to_antecedent(antecedent, cond3);
consequent = create_rule_consequent(heat_status, heat_off);
rule = create_rule(engine, antecedent, consequent);
add_rule(engine, rule);

antecedent = create_rule_antecedent();
cond1 = create_condition(temp_err, low_temp, AND);
cond2 = create_condition(humidity, high_hum, AND);
cond3 = create_condition(rate_of_heating, low_roh, NONE);
add_condition_to_antecedent(antecedent, cond1);
add_condition_to_antecedent(antecedent, cond2);
add_condition_to_antecedent(antecedent, cond3);
consequent = create_rule_consequent(heat_status, heat_off);
rule = create_rule(engine, antecedent, consequent);
add_rule(engine, rule);

antecedent = create_rule_antecedent();
cond1 = create_condition(temp_err, low_temp, AND);
cond2 = create_condition(humidity, high_hum, AND);
cond3 = create_condition(rate_of_heating, moderate_roh, NONE);
add_condition_to_antecedent(antecedent, cond1);
add_condition_to_antecedent(antecedent, cond2);
add_condition_to_antecedent(antecedent, cond3);
consequent = create_rule_consequent(heat_status, heat_off);
rule = create_rule(engine, antecedent, consequent);
add_rule(engine, rule);

antecedent = create_rule_antecedent();
cond1 = create_condition(temp_err, low_temp, AND);
cond2 = create_condition(humidity, high_hum, AND);
cond3 = create_condition(rate_of_heating, high_roh, NONE);
add_condition_to_antecedent(antecedent, cond1);
add_condition_to_antecedent(antecedent, cond2);
add_condition_to_antecedent(antecedent, cond3);
consequent = create_rule_consequent(heat_status, heat_off);
rule = create_rule(engine, antecedent, consequent);
add_rule(engine, rule);

antecedent = create_rule_antecedent();
cond1 = create_condition(temp_err, moderate_temp, AND);
cond2 = create_condition(humidity, low_hum, AND);
cond3 = create_condition(rate_of_heating, low_roh, NONE);
add_condition_to_antecedent(antecedent, cond1);
add_condition_to_antecedent(antecedent, cond2);
add_condition_to_antecedent(antecedent, cond3);
consequent = create_rule_consequent(heat_status, heat_on);
rule = create_rule(engine, antecedent, consequent);
add_rule(engine, rule);

antecedent = create_rule_antecedent();
cond1 = create_condition(temp_err, moderate_temp, AND);
cond2 = create_condition(humidity, low_hum, AND);
cond3 = create_condition(rate_of_heating, moderate_roh, NONE);
add_condition_to_antecedent(antecedent, cond1);
add_condition_to_antecedent(antecedent, cond2);
add_condition_to_antecedent(antecedent, cond3);
consequent = create_rule_consequent(heat_status, heat_on);
rule = create_rule(engine, antecedent, consequent);
add_rule(engine, rule);

antecedent = create_rule_antecedent();
cond1 = create_condition(temp_err, moderate_temp, AND);
cond2 = create_condition(humidity, low_hum, AND);
cond3 = create_condition(rate_of_heating, high_roh, NONE);
add_condition_to_antecedent(antecedent, cond1);
add_condition_to_antecedent(antecedent, cond2);
add_condition_to_antecedent(antecedent, cond3);
consequent = create_rule_consequent(heat_status, heat_off);
rule = create_rule(engine, antecedent, consequent);
add_rule(engine, rule);

antecedent = create_rule_antecedent();
cond1 = create_condition(temp_err, moderate_temp, AND);
cond2 = create_condition(humidity, moderate_hum, AND);
cond3 = create_condition(rate_of_heating, low_roh, NONE);
add_condition_to_antecedent(antecedent, cond1);
add_condition_to_antecedent(antecedent, cond2);
add_condition_to_antecedent(antecedent, cond3);
consequent = create_rule_consequent(heat_status, heat_off);
rule = create_rule(engine, antecedent, consequent);
add_rule(engine, rule);

antecedent = create_rule_antecedent();
cond1 = create_condition(temp_err, moderate_temp, AND);
cond2 = create_condition(humidity, moderate_hum, AND);
cond3 = create_condition(rate_of_heating, moderate_roh, NONE);
add_condition_to_antecedent(antecedent, cond1);
add_condition_to_antecedent(antecedent, cond2);
add_condition_to_antecedent(antecedent, cond3);
consequent = create_rule_consequent(heat_status, heat_off);
rule = create_rule(engine, antecedent, consequent);
add_rule(engine, rule);

antecedent = create_rule_antecedent();
cond1 = create_condition(temp_err, moderate_temp, AND);
cond2 = create_condition(humidity, moderate_hum, AND);
cond3 = create_condition(rate_of_heating, high_roh, NONE);
add_condition_to_antecedent(antecedent, cond1);
add_condition_to_antecedent(antecedent, cond2);
add_condition_to_antecedent(antecedent, cond3);
consequent = create_rule_consequent(heat_status, heat_off);
rule = create_rule(engine, antecedent, consequent);
add_rule(engine, rule);

antecedent = create_rule_antecedent();
cond1 = create_condition(temp_err, moderate_temp, AND);
cond2 = create_condition(humidity, high_hum, AND);
cond3 = create_condition(rate_of_heating, low_roh, NONE);
add_condition_to_antecedent(antecedent, cond1);
add_condition_to_antecedent(antecedent, cond2);
add_condition_to_antecedent(antecedent, cond3);
consequent = create_rule_consequent(heat_status, heat_off);
rule = create_rule(engine, antecedent, consequent);
add_rule(engine, rule);

antecedent = create_rule_antecedent();
cond1 = create_condition(temp_err, moderate_temp, AND);
cond2 = create_condition(humidity, high_hum, AND);
cond3 = create_condition(rate_of_heating, moderate_roh, NONE);
add_condition_to_antecedent(antecedent, cond1);
add_condition_to_antecedent(antecedent, cond2);
add_condition_to_antecedent(antecedent, cond3);
consequent = create_rule_consequent(heat_status, heat_off);
rule = create_rule(engine, antecedent, consequent);
add_rule(engine, rule);

antecedent = create_rule_antecedent();
cond1 = create_condition(temp_err, moderate_temp, AND);
cond2 = create_condition(humidity, high_hum, AND);
cond3 = create_condition(rate_of_heating, high_roh, NONE);
add_condition_to_antecedent(antecedent, cond1);
add_condition_to_antecedent(antecedent, cond2);
add_condition_to_antecedent(antecedent, cond3);
consequent = create_rule_consequent(heat_status, heat_off);
rule = create_rule(engine, antecedent, consequent);
add_rule(engine, rule);

antecedent = create_rule_antecedent();
cond1 = create_condition(temp_err, high_temp, AND);
cond2 = create_condition(humidity, low_hum, AND);
cond3 = create_condition(rate_of_heating, low_roh, NONE);
add_condition_to_antecedent(antecedent, cond1);
add_condition_to_antecedent(antecedent, cond2);
add_condition_to_antecedent(antecedent, cond3);
consequent = create_rule_consequent(heat_status, heat_on);
rule = create_rule(engine, antecedent, consequent);
add_rule(engine, rule);

antecedent = create_rule_antecedent();
cond1 = create_condition(temp_err, high_temp, AND);
cond2 = create_condition(humidity, low_hum, AND);
cond3 = create_condition(rate_of_heating, moderate_roh, NONE);
add_condition_to_antecedent(antecedent, cond1);
add_condition_to_antecedent(antecedent, cond2);
add_condition_to_antecedent(antecedent, cond3);
consequent = create_rule_consequent(heat_status, heat_on);
rule = create_rule(engine, antecedent, consequent);
add_rule(engine, rule);

antecedent = create_rule_antecedent();
cond1 = create_condition(temp_err, high_temp, AND);
cond2 = create_condition(humidity, low_hum, AND);
cond3 = create_condition(rate_of_heating, high_roh, NONE);
add_condition_to_antecedent(antecedent, cond1);
add_condition_to_antecedent(antecedent, cond2);
add_condition_to_antecedent(antecedent, cond3);
consequent = create_rule_consequent(heat_status, heat_on);
rule = create_rule(engine, antecedent, consequent);
add_rule(engine, rule);

antecedent = create_rule_antecedent();
cond1 = create_condition(temp_err, high_temp, AND);
cond2 = create_condition(humidity, moderate_hum, AND);
cond3 = create_condition(rate_of_heating, low_roh, NONE);
add_condition_to_antecedent(antecedent, cond1);
add_condition_to_antecedent(antecedent, cond2);
add_condition_to_antecedent(antecedent, cond3);
consequent = create_rule_consequent(heat_status, heat_on);
rule = create_rule(engine, antecedent, consequent);
add_rule(engine, rule);

antecedent = create_rule_antecedent();
cond1 = create_condition(temp_err, high_temp, AND);
cond2 = create_condition(humidity, moderate_hum, AND);
cond3 = create_condition(rate_of_heating, moderate_roh, NONE);
add_condition_to_antecedent(antecedent, cond1);
add_condition_to_antecedent(antecedent, cond2);
add_condition_to_antecedent(antecedent, cond3);
consequent = create_rule_consequent(heat_status, heat_on);
rule = create_rule(engine, antecedent, consequent);
add_rule(engine, rule);

antecedent = create_rule_antecedent();
cond1 = create_condition(temp_err, high_temp, AND);
cond2 = create_condition(humidity, moderate_hum, AND);
cond3 = create_condition(rate_of_heating, high_roh, NONE);
add_condition_to_antecedent(antecedent, cond1);
add_condition_to_antecedent(antecedent, cond2);
add_condition_to_antecedent(antecedent, cond3);
consequent = create_rule_consequent(heat_status, heat_on);
rule = create_rule(engine, antecedent, consequent);
add_rule(engine, rule);

antecedent = create_rule_antecedent();
cond1 = create_condition(temp_err, high_temp, AND);
cond2 = create_condition(humidity, high_hum, AND);
cond3 = create_condition(rate_of_heating, low_roh, NONE);
add_condition_to_antecedent(antecedent, cond1);
add_condition_to_antecedent(antecedent, cond2);
add_condition_to_antecedent(antecedent, cond3);
consequent = create_rule_consequent(heat_status, heat_on);
rule = create_rule(engine, antecedent, consequent);
add_rule(engine, rule);

antecedent = create_rule_antecedent();
cond1 = create_condition(temp_err, high_temp, AND);
cond2 = create_condition(humidity, high_hum, AND);
cond3 = create_condition(rate_of_heating, moderate_roh, NONE);
add_condition_to_antecedent(antecedent, cond1);
add_condition_to_antecedent(antecedent, cond2);
add_condition_to_antecedent(antecedent, cond3);
consequent = create_rule_consequent(heat_status, heat_on);
rule = create_rule(engine, antecedent, consequent);
add_rule(engine, rule);

antecedent = create_rule_antecedent();
cond1 = create_condition(temp_err, high_temp, AND);
cond2 = create_condition(humidity, high_hum, AND);
cond3 = create_condition(rate_of_heating, high_roh, NONE);
add_condition_to_antecedent(antecedent, cond1);
add_condition_to_antecedent(antecedent, cond2);
add_condition_to_antecedent(antecedent, cond3);
consequent = create_rule_consequent(heat_status, heat_on);
rule = create_rule(engine, antecedent, consequent);
add_rule(engine, rule);

